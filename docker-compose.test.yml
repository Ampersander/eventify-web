version: '3'
services:
  gateway:
    build: ./gateway
    restart: always
    hostname: gateway
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend
  event:
    build: ./event
    restart: always
    hostname: event
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - db
    ports:
      - ${EVENT_SERVICE_PORT}:${EVENT_SERVICE_PORT}
  analytic:
    build: ./analytic
    restart: always
    hostname: analytic
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - db
    ports:
      - ${ANALYTIC_SERVICE_PORT}:${ANALYTIC_SERVICE_PORT}
  token:
    build: ./token
    restart: always
    hostname: token
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - db
    ports:
      - ${TOKEN_SERVICE_PORT}:${TOKEN_SERVICE_PORT}
  mailer:
    build: ./mailer
    restart: always
    hostname: mailer
    env_file:
      - .env.test
    networks:
      - backend
    ports:
      - ${MAILER_SERVICE_PORT}:${MAILER_SERVICE_PORT}
  permission:
    build: ./permission
    restart: always
    hostname: permission
    env_file:
      - .env.test
    networks:
      - backend
    ports:
      - ${PERMISSION_SERVICE_PORT}:${PERMISSION_SERVICE_PORT}
  user:
    build: ./user
    restart: always
    hostname: user
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - mailer
      - db
    ports:
      - ${USER_SERVICE_PORT}:${USER_SERVICE_PORT}
  db:
    image: 'mongo:3.7'
    restart: always
    hostname: db
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - "./db/init/:/docker-entrypoint-initdb.d/"
    networks:
      - backend
    env_file:
      - .env.test
    ports:
      - 27017:27017
networks:
  backend:
    driver: bridge
